PS E:\Prod\ChoresandRewards> type docker-compose.production.yml
# Production setup with Traefik reverse proxy for multiple websites


services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v3.0
    container_name: traefik
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "8080:8080" # Traefik dashboard (optional)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./acme.json:/acme.json
    restart: unless-stopped

  # Chores & Rewards app
  chores-app:
    build: .
    container_name: chores-rewards-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chores-app.rule=Host(`www.choresandrewards.app`) || Host(`choresandrewards.app`) || Host(`192.168.1.200`)"
      - "traefik.http.routers.chores-app.entrypoints=websecure"
      - "traefik.http.routers.chores-app.tls.certresolver=myresolver"
      - "traefik.http.routers.chores-app-insecure.rule=Host(`192.168.1.200`)"
      - "traefik.http.routers.chores-app-insecure.entrypoints=web"
      - "traefik.http.routers.chores-app-insecure.service=chores-app"
      - "traefik.http.services.chores-app.loadbalancer.server.port=5000"
    expose:
      - "5000"

networks:
  default:
    name: traefik-network
PS E:\Prod\ChoresandRewards> type traefik.yml
# Traefik configuration for multiple websites
api:
  dashboard: true
  debug: true

entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          permanent: true

  websecure:
    address: ":443"

providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false

certificatesResolvers:
  myresolver:
    acme:
      tlsChallenge: {}
      email: rod.lunt@me.com  # Change this to your email
      storage: acme.json
      # Use Let's Encrypt staging for testing
      # caServer: https://acme-staging-v02.api.letsencrypt.org/directory
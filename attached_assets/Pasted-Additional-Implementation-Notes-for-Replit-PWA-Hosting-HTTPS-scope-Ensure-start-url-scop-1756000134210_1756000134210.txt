Additional Implementation Notes for Replit
PWA & Hosting

HTTPS + scope: Ensure start_url: "/", scope: "/", service worker at /sw.js controls the whole app.

SPA fallback: Serve /index.html on unknown routes (already in Dockerfile; mirror in Replit preview).

Installability: Pass Lighthouse PWA checks (manifest, SW, icons 192/512 and maskable).

HSTS & redirects (prod): Redirect http → https, add HSTS when deployed to https://choresandrewards.app.

Domain & Play-store readiness

Asset Links: Keep public/.well-known/assetlinks.json; I’ll replace the SHA-256 later.

Path-agnostic code: No absolute URLs to dev hosts; use relative paths so the TWA wrapper just works.

Data, Storage, and Safety

Cents only: All currency math in integer cents (no floats).

Schema on import: Validate backup JSON (version field, required keys) and show a preview; fail gracefully.

Migrations: Add a simple DB version/migration function for future schema changes (e.g., v2 adds fields).

Write strategy: Debounce non-critical writes; wrap IndexedDB ops in try/catch with user-friendly errors.

Incognito/iOS caveats: Show a warning if storage is unavailable/ephemeral (private mode, quotas).

Backup nudges: After X completions or every 30 days, toast a gentle “Export a backup?” prompt.

Accessibility & UX polish

Reduced motion: Respect prefers-reduced-motion (already partially done); disable confetti when set.

Focus states & keyboard: Ensure visible focus rings and tab order; dialogs trap focus.

ARIA/labels: Buttons, inputs, and toasts should have descriptive labels (aria-live for toasts).

Touch ergonomics: 44px+ tappable targets, no tiny hit areas; prevent double-tap accidental repeats (disable while processing for ~250ms).

Feedback (Duolingo-style)

Audio policy: First user tap should “unlock” audio (play a muted/short sound) to satisfy browser autoplay rules; fall back silently if blocked.

Settings toggles: Sounds / Haptics / Confetti stored in IndexedDB and read on startup (already specced).

shadcn/ui setup

Initialize shadcn and generate: button, card, dialog, table, toast, input, label, separator, tabs, tooltip, badge, scroll-area.

Theme tokens: Map our brand colors to shadcn CSS variables (so components pick up the Brisbane-Kids palette).

Use shadcn AlertDialog for Payout confirm; Toast for confirmations (we’re using sonner—either is fine, but be consistent).

Error handling & edge cases

Concurrent actions: Guard against rapid repeated taps on Complete / Payout (disable button briefly).

Deletion guards: Prevent deleting a child if mid-payout dialog; confirm destructive actions.

Zero totals: Disable Payout at 0; show informational toast instead of alert.

Code quality & ops

ESLint + Prettier: Add basic configs; run on commit if possible.

Env-agnostic build: npm run build produces a clean /dist with no external calls.

Versioning: Add APP_VERSION in code (from package.json) and show in Settings; log it in exports.

Content & compliance

Privacy Policy page: Simple static page (local-only data, optional export/import); link in footer & Settings.

No analytics: Do not include any analytics or tracking. (Families Policy friendly.)

Copy tone: Friendly, concise, specific (“+ $2.00 for Aria”). Provide localized dates via toLocaleString() with en-AU.

iOS/Android quirks to consider now

Audio on iOS: Ensure sounds only play after user interaction; keep duration short.

Add-to-Home-Screen: Test PWA install on iOS Safari and Android Chrome; icons look good on both.

Testing checklist (acceptance add-on)

Offline test: After first load, switch to airplane mode; app should still work (complete chores, view totals/history).

Backup/restore: Export → hard reload → Import → verify children/chores/totals/payouts restored.

Route refresh: Refresh on /child/:id deep link should still load correctly.

Lighthouse: PWA “Installable” green; performance reasonable on mid-range mobile.

Optional small asks (nice ROI)

Add a quick picker on the child page to “Complete ×N” (e.g., hold to add 2–3 times), still minimal UI.

Include a Goal toggle (per child) to show a small progress bar on Totals (default off).

Add undo last completion (single-step, 5-second toast action) to reduce mis-taps.

If you include the block above, Replit will have everything needed beyond the scaffold you already pasted.